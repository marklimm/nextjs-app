// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model Character {
  id Int @id @default(autoincrement())
  firstName String
  lastName String
  bio String
  imageUrl String?

  // //  Character has a one-to-many relationship with CharacterPost
  // //  does not exist in the DB, is used for prisma client
  posts CharacterPost[]

  //  Character has a many-to-many relationship with CharacterTag
  tags CharacterTag[]

  // //  many-to-many self-relation - https://stackoverflow.com/questions/65162657/one-to-many-self-relation-in-prisma-schema and https://www.prisma.io/docs/concepts/components/prisma-schema/relations#many-to-many-self-relations
  friends Character[] @relation("friends")
  friendsRelation Character[] @relation("friends")

  // Character has a one-to-many relationship with Task
  tasks Task[]
}

model CharacterPost {
  id Int @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  body String

  //  this field does NOT exist in the DB, is used for prisma client
  character Character @relation(fields: [characterId], references: [id])

  //  this field DOES exist in the DB, this is the foreign key that connects Post with Character
  characterId Int
}

model CharacterTag {
  id Int @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  name String
  description String

  //  CharacterTag has a many-to-many relationship with Character
  character Character[]

}


model Task {
  id Int @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  title String
  description String

  //  rough estimate of how long the task should take
  tShirtSize Int

  //  has the task been completed or not
  isComplete Boolean @default(false)

  //  this field does NOT exist in the DB, is used for prisma client
  assignedTo Character @relation(fields: [characterId], references: [id])

  //  this field DOES exist in the DB, this is the foreign key that connects Task with Character
  characterId Int
}
